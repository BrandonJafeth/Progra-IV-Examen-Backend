// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Services.Migrations
{
    [DbContext(typeof(MyContext))]
    partial class MyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entities.Bus_Routes", b =>
                {
                    b.Property<int>("Id_Bus_Routes")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Bus_Routes"));

                    b.Property<string>("From")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<string>("To")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Bus_Routes");

                    b.ToTable("Routes");

                    b.HasData(
                        new
                        {
                            Id_Bus_Routes = 1,
                            From = "Nicoya",
                            Price = 500f,
                            To = "Santa Cruz"
                        },
                        new
                        {
                            Id_Bus_Routes = 2,
                            From = "Liberia",
                            Price = 1000f,
                            To = "Santa Cruz"
                        },
                        new
                        {
                            Id_Bus_Routes = 3,
                            From = "Nicoya",
                            Price = 1500f,
                            To = "Liberia"
                        });
                });

            modelBuilder.Entity("Entities.Menu", b =>
                {
                    b.Property<int>("Id_Menu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Menu"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Menu");

                    b.ToTable("Menus");
                });

            modelBuilder.Entity("Entities.Ticket", b =>
                {
                    b.Property<int>("Id_Ticket")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Ticket"));

                    b.Property<DateTime>("Date_Ticket")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id_Bus_Routes")
                        .HasColumnType("int");

                    b.HasKey("Id_Ticket");

                    b.HasIndex("Id_Bus_Routes");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("Entities.Ticket", b =>
                {
                    b.HasOne("Entities.Bus_Routes", "Bus_Routes")
                        .WithMany("Tickets")
                        .HasForeignKey("Id_Bus_Routes")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bus_Routes");
                });

            modelBuilder.Entity("Entities.Bus_Routes", b =>
                {
                    b.Navigation("Tickets");
                });
#pragma warning restore 612, 618
        }
    }
}
